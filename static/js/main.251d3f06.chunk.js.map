{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js","useLocation.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","content","useState","setLat","errorMessage","setErrorMessage","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","useLocation","ReactDOM","render","document","querySelector"],"mappings":"qJAGMA,G,KAAc,CAChBC,OAAS,CACLC,KAAK,uBACLC,SAAU,OAEdC,OAAS,CACLF,KAAM,mBACNC,SAAU,eA0BHE,EAdO,SAACC,GAEnB,IAVeC,EAAKC,EAUdC,GAVSF,EAUUD,EAAMC,KAVXC,GAUgB,IAAIE,MAAOC,YATpC,GAAKH,EAAQ,EACbD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIH,EAGHP,EAAaS,GAAhCP,EAHsB,EAGtBA,KAAMC,EAHgB,EAGhBA,SAEb,OACI,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aC7BlBU,EAAU,SAACP,GACb,OACI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,uBAAuBN,EAAMQ,WAKxDD,EAAQE,aAAe,CACnBD,QAAU,cAGCD,QCRTG,EAAM,WAAO,IAGXC,EAHU,ECHH,WAAO,IAAD,EACOC,mBAAS,MADhB,mBACTX,EADS,KACJY,EADI,OAEyBD,mBAAS,IAFlC,mBAETE,EAFS,KAEKC,EAFL,KAWjB,OAPAC,qBAAU,WACNC,UAAUC,YAAYC,oBAClB,SAAAC,GAAQ,OAAIP,EAAOO,EAASC,OAAOC,aACnC,SAAAC,GAAG,OAAIR,EAAiBQ,EAAIf,cAEjC,IAEI,CAACP,EAAKa,GDPeU,GADd,mBACPvB,EADO,KACFa,EADE,KAYd,OAPIH,EADDG,EACW,uCAAaA,GACjBb,EACI,kBAAC,EAAD,CAAeA,IAAKA,IAEpB,kBAAC,EAAD,CAASO,QAAQ,mCAGxB,yBAAKF,UAAU,cAAcK,IAIxCc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.251d3f06.chunk.js","sourcesContent":["import './seasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig ={\n    summer : {\n        text:'let\\'s hit the beach!',\n        iconName: 'sun'\n    },\n    winter : {\n        text: 'Burr it is cold!',\n        iconName: 'snowflake'\n    }\n}\n\nconst getSeason = (lat, month) => {\n    if(month > 2 && month < 9){\n        return lat > 0 ? 'summer' : 'winter';\n    }else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n};\n\nconst SeasonDisplay = (props) => {\n\n    const season = getSeason(props.lat, new Date().getMonth());\n    const {text, iconName } = seasonConfig[season];\n\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`}></i>\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`}></i>\n        </div>\n    );\n};\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props) => {\n    return(\n        <div className='ui active dimmer'>\n            <div className=\" ui big text loader\">{props.message}</div>\n        </div>\n    );\n};\n\nSpinner.defaultProps = { \n    message : 'Loading...'\n};\n\nexport default Spinner;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner'\nimport useLocation from './useLocation';\n\nconst App = () => {\n    const [lat, errorMessage] = useLocation();\n\n    let content; \n    if(errorMessage){\n        content = <div>Error: {errorMessage}</div>;\n    } else if(lat){\n        content = <SeasonDisplay lat={lat} />;\n    } else {\n        content = <Spinner message=\"Please accept location request\" />\n    }\n\n    return <div className=\"border red\">{content}</div>\n};\n\n       \nReactDOM.render(<App />, document.querySelector('#root'));","import { useState, useEffect } from 'react';\n\n\nexport default () => {\n    const [ lat, setLat ] = useState(null);\n    const [ errorMessage, setErrorMessage ] = useState('');\n\n    useEffect(() => { \n        navigator.geolocation.getCurrentPosition(\n            position => setLat(position.coords.latitude),\n            err => setErrorMessage( err.message )\n        );\n    }, []);\n\n    return [lat, errorMessage];\n};"],"sourceRoot":""}